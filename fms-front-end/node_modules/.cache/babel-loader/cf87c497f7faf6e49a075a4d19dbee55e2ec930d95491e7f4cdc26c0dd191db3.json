{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      items: [],\n      newItem: {\n        name: \"\",\n        description: \"\"\n      },\n      selectedFile: null,\n      errorMessage: \"\" // Added error message state\n    };\n  },\n  methods: {\n    handleFileChange(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    handleUpdateFile(event, item) {\n      item.newFile = event.target.files[0];\n    },\n    getFileDownloadUrl(item) {\n      return `http://localhost:3002/files/${item.id}`;\n    },\n    async fetchItems() {\n      try {\n        const response = await axios.get(\"http://localhost:3002/items\");\n        this.items = response.data;\n      } catch (error) {\n        console.error(\"Error fetching items:\", error);\n        this.errorMessage = \"Failed to fetch items.\";\n      }\n    },\n    async addItem() {\n      try {\n        if (!this.selectedFile) {\n          alert(\"Please select a file\");\n          return;\n        }\n        const formData = new FormData();\n        formData.append(\"name\", this.newItem.name);\n        formData.append(\"description\", this.newItem.description);\n        formData.append(\"file\", this.selectedFile);\n\n        // Perform the POST request\n        await axios.post(\"http://localhost:3002/items\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n\n        // Fetch updated items and reset form\n        await this.fetchItems();\n        this.newItem.name = \"\";\n        this.newItem.description = \"\";\n        this.selectedFile = null;\n        if (this.$refs.fileInput) {\n          this.$refs.fileInput.value = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error adding item:\", error);\n        this.errorMessage = \"Failed to add item. Please try again.\";\n      }\n    },\n    async updateItem(item) {\n      try {\n        const formData = new FormData(); // Fixed typo here\n        formData.append(\"name\", item.name);\n        formData.append(\"description\", item.description);\n        if (item.newFile) {\n          formData.append(\"file\", item.newFile);\n        }\n        await axios.put(`http://localhost:3002/items/${item.id}`, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        await this.fetchItems();\n        item.newFile = null;\n        const fileInput = this.$refs[`updateFile_${item.id}`];\n        if (fileInput) {\n          fileInput.value = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error updating item:\", error);\n        this.errorMessage = \"Failed to update item. Please try again.\";\n      }\n    },\n    async deleteItem(id) {\n      try {\n        await axios.delete(`http://localhost:3002/items/${id}`);\n        await this.fetchItems();\n      } catch (error) {\n        console.error(\"Error deleting item:\", error);\n        this.errorMessage = \"Failed to delete item. Please try again.\";\n      }\n    }\n  },\n  created() {\n    this.fetchItems();\n  }\n};","map":{"version":3,"names":["axios","name","data","items","newItem","description","selectedFile","errorMessage","methods","handleFileChange","event","target","files","handleUpdateFile","item","newFile","getFileDownloadUrl","id","fetchItems","response","get","error","console","addItem","alert","formData","FormData","append","post","headers","$refs","fileInput","value","updateItem","put","deleteItem","delete","created"],"sources":["D:\\Rex\\HELP University\\Y2S1\\File Management System Project\\fms-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>My File Management System</h1>\n    \n    <div class=\"form-container\">\n      <input v-model=\"newItem.name\" placeholder=\"name\">\n      <input v-model=\"newItem.description\" placeholder=\"description\">\n      <input\n        type=\"file\"\n        @change=\"handleFileChange\"\n        ref=\"fileInput\"\n        class=\"file-input\"\n      >\n      <button @click=\"addItem\">Upload File</button>\n    </div>\n\n    <div class=\"items-container\">\n      <ul>\n        <li v-for=\"item in items\" :key=\"item.id\" class=\"item\">\n          <div class=\"item-info\">\n            <input v-model=\"item.name\">\n            <input v-model=\"item.description\">\n            <a :href=\"getFileDownloadUrl(item)\" class=\"download-link\">Download File</a>\n            <span class=\"file-name\">{{ item.originalName }}</span>\n          </div>\n          <div class=\"item-actions\">\n            <input\n              type=\"file\"\n              @change=\"(e) => handleUpdateFile(e, item)\"\n              ref=\"`updateFile_${item.id}`\"\n              class=\"file-input\"\n            >\n            <button @click=\"updateItem(item)\">Update</button>\n            <button @click=\"deleteItem(item.id)\" class=\"delete-btn\">Delete</button>\n          </div>\n        </li>\n      </ul>\n    </div>\n\n    <!-- Error Message -->\n    <div v-if=\"errorMessage\" class=\"error-message\">\n      {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      items: [],\n      newItem: {\n        name: \"\",\n        description: \"\",\n      },\n      selectedFile: null,\n      errorMessage: \"\", // Added error message state\n    };\n  },\n\n  methods: {\n    handleFileChange(event) {\n      this.selectedFile = event.target.files[0];\n    },\n\n    handleUpdateFile(event, item) {\n      item.newFile = event.target.files[0];\n    },\n\n    getFileDownloadUrl (item) {\n      return `http://localhost:3002/files/${item.id}`;\n    },\n\n    async fetchItems() {\n      try {\n        const response = await axios.get(\"http://localhost:3002/items\");\n        this.items = response.data;\n      } catch (error) {\n        console.error(\"Error fetching items:\", error);\n        this.errorMessage = \"Failed to fetch items.\";\n      }\n    },\n\n    async addItem() {\n      try {\n        if (!this.selectedFile) {\n          alert(\"Please select a file\");\n          return;\n        }\n\n        const formData = new FormData();\n        formData.append(\"name\", this.newItem.name);\n        formData.append(\"description\", this.newItem.description);\n        formData.append(\"file\", this.selectedFile);\n\n        // Perform the POST request\n        await axios.post(\"http://localhost:3002/items\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        });\n\n        // Fetch updated items and reset form\n        await this.fetchItems();\n        this.newItem.name = \"\";\n        this.newItem.description = \"\";\n        this.selectedFile = null;\n\n        if (this.$refs.fileInput) {\n          this.$refs.fileInput.value = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error adding item:\", error);\n        this.errorMessage = \"Failed to add item. Please try again.\";\n      }\n    },\n\n    async updateItem(item) {\n      try {\n        const formData = new FormData(); // Fixed typo here\n        formData.append(\"name\", item.name);\n        formData.append(\"description\", item.description);\n        if (item.newFile) {\n          formData.append(\"file\", item.newFile);\n        }\n\n        await axios.put(`http://localhost:3002/items/${item.id}`, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        \n        await this.fetchItems();\n        item.newFile = null;\n        const fileInput = this.$refs[`updateFile_${item.id}`];\n        if (fileInput) {\n          fileInput.value = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error updating item:\", error);\n        this.errorMessage = \"Failed to update item. Please try again.\";\n      }\n    },\n\n    async deleteItem(id) {\n      try {\n        await axios.delete(`http://localhost:3002/items/${id}`)\n        await this.fetchItems();\n      } catch (error) {\n        console.error(\"Error deleting item:\", error);\n        this.errorMessage = \"Failed to delete item. Please try again.\";\n      }\n    }\n  },\n\n  created() {\n    this.fetchItems();\n  },\n};\n</script>\n\n<style scoped>\n#app {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nh1 {\n  text-align: center;\n}\n\n.form-container {\n  margin: 20px 0;\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n}\n\n.items-container {\n  margin-top: 20px;\n}\n\n.item {\n  display: flex;\n  gap: 10px;\n  margin: 10px 0;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  align-items: center;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\ninput {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n.error-message {\n  color: red;\n  margin-top: 20px;\n  text-align: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}