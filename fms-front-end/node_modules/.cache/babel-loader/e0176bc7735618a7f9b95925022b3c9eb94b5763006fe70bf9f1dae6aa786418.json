{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: 'App',\n  data() {\n    return {\n      items: [],\n      loading: false,\n      error: null,\n      newItem: {\n        name: \"\",\n        description: \"\"\n      }\n    };\n  },\n  methods: {\n    async fetchItems() {\n      this.loading = true;\n      this.error = null;\n      try {\n        const response = await axios.get(\"http://localhost:3001/items\");\n        this.items = response.data;\n        console.log(\"Fetched items:\", this.items); // Debug log\n      } catch (error) {\n        this.error = \"Failed to fetch items: \" + error.message;\n        console.error(\"Error fetching items:\", error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async addItem() {\n      if (!this.newItem.name || !this.newItem.description) {\n        this.error = \"Please fill in both name and description\";\n        return;\n      }\n      try {\n        await axios.post(\"http://localhost:3001/items\", this.newItem);\n        await this.fetchItems();\n        this.newItem.name = \"\";\n        this.newItem.description = \"\";\n      } catch (error) {\n        this.error = \"Failed to add item: \" + error.message;\n        console.error(\"Error adding item:\", error);\n      }\n    },\n    async updateItem(item) {\n      try {\n        await axios.put(`http://localhost:3001/items/${item.id}`, item);\n        await this.fetchItems();\n      } catch (error) {\n        this.error = \"Failed to update item: \" + error.message;\n        console.error(\"Error updating item:\", error);\n      }\n    },\n    async deleteItem(id) {\n      try {\n        await axios.delete(`http://localhost:3001/items/${id}`);\n        await this.fetchItems();\n      } catch (error) {\n        this.error = \"Failed to delete item: \" + error.message;\n        console.error(\"Error deleting item:\", error);\n      }\n    }\n  },\n  created() {\n    this.fetchItems();\n  }\n};","map":{"version":3,"names":["axios","name","data","items","loading","error","newItem","description","methods","fetchItems","response","get","console","log","message","addItem","post","updateItem","item","put","id","deleteItem","delete","created"],"sources":["D:\\Rex\\HELP University\\Y2S1\\File Management System Project\\fms-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>My File Management System</h1>\n    \n    <!-- Input Form -->\n    <div class=\"form-container\">\n      <input v-model=\"newItem.name\" placeholder=\"name\">\n      <input v-model=\"newItem.description\" placeholder=\"description\">\n      <button @click=\"addItem\">Create File</button>\n    </div>\n\n    <!-- Loading State -->\n    <div v-if=\"loading\">Loading...</div>\n\n    <!-- Error State -->\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\n\n    <!-- Items List - explicitly checking if items exist -->\n    <div v-if=\"items && items.length > 0\" class=\"items-container\">\n      <ul>\n        <li v-for=\"item in items\" :key=\"item.id\" class=\"item\">\n          <input v-model=\"item.name\">\n          <input v-model=\"item.description\">\n          <button @click=\"updateItem(item)\">Update File</button>\n          <button @click=\"deleteItem(item.id)\">Delete File</button>\n        </li>\n      </ul>\n    </div>\n    \n    <!-- Empty State -->\n    <div v-else-if=\"!loading\" class=\"empty-state\">\n      No files found\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      items: [],\n      loading: false,\n      error: null,\n      newItem: {\n        name: \"\",\n        description: \"\",\n      },\n    };\n  },\n\n  methods: {\n    async fetchItems() {\n      this.loading = true;\n      this.error = null;\n      try {\n        const response = await axios.get(\"http://localhost:3001/items\");\n        this.items = response.data;\n        console.log(\"Fetched items:\", this.items); // Debug log\n      } catch (error) {\n        this.error = \"Failed to fetch items: \" + error.message;\n        console.error(\"Error fetching items:\", error);\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async addItem() {\n      if (!this.newItem.name || !this.newItem.description) {\n        this.error = \"Please fill in both name and description\";\n        return;\n      }\n\n      try {\n        await axios.post(\"http://localhost:3001/items\", this.newItem);\n        await this.fetchItems();\n        this.newItem.name = \"\";\n        this.newItem.description = \"\";\n      } catch (error) {\n        this.error = \"Failed to add item: \" + error.message;\n        console.error(\"Error adding item:\", error);\n      }\n    },\n\n    async updateItem(item) {\n      try {\n        await axios.put(`http://localhost:3001/items/${item.id}`, item);\n        await this.fetchItems();\n      } catch (error) {\n        this.error = \"Failed to update item: \" + error.message;\n        console.error(\"Error updating item:\", error);\n      }\n    },\n\n    async deleteItem(id) {\n      try {\n        await axios.delete(`http://localhost:3001/items/${id}`);\n        await this.fetchItems();\n      } catch (error) {\n        this.error = \"Failed to delete item: \" + error.message;\n        console.error(\"Error deleting item:\", error);\n      }\n    },\n  },\n\n  created() {\n    this.fetchItems();\n  },\n};\n</script>\n\n<style scoped>\n#app {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.form-container {\n  margin: 20px 0;\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n}\n\n.items-container {\n  margin-top: 20px;\n}\n\n.item {\n  display: flex;\n  gap: 10px;\n  margin: 10px 0;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  align-items: center;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\ninput {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n.error {\n  color: red;\n  margin: 10px 0;\n}\n\n.empty-state {\n  text-align: center;\n  margin: 20px 0;\n  color: #666;\n}\n</style>"],"mappings":"AAqCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE;QACPL,IAAI,EAAE,EAAE;QACRM,WAAW,EAAE;MACf;IACF,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,CAACL,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,KAAI,GAAI,IAAI;MACjB,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,6BAA6B,CAAC;QAC/D,IAAI,CAACR,KAAI,GAAIO,QAAQ,CAACR,IAAI;QAC1BU,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACV,KAAK,CAAC,EAAE;MAC7C,EAAE,OAAOE,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,yBAAwB,GAAIA,KAAK,CAACS,OAAO;QACtDF,OAAO,CAACP,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAED,MAAMW,OAAOA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACT,OAAO,CAACL,IAAG,IAAK,CAAC,IAAI,CAACK,OAAO,CAACC,WAAW,EAAE;QACnD,IAAI,CAACF,KAAI,GAAI,0CAA0C;QACvD;MACF;MAEA,IAAI;QACF,MAAML,KAAK,CAACgB,IAAI,CAAC,6BAA6B,EAAE,IAAI,CAACV,OAAO,CAAC;QAC7D,MAAM,IAAI,CAACG,UAAU,CAAC,CAAC;QACvB,IAAI,CAACH,OAAO,CAACL,IAAG,GAAI,EAAE;QACtB,IAAI,CAACK,OAAO,CAACC,WAAU,GAAI,EAAE;MAC/B,EAAE,OAAOF,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,sBAAqB,GAAIA,KAAK,CAACS,OAAO;QACnDF,OAAO,CAACP,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;IACF,CAAC;IAED,MAAMY,UAAUA,CAACC,IAAI,EAAE;MACrB,IAAI;QACF,MAAMlB,KAAK,CAACmB,GAAG,CAAC,+BAA+BD,IAAI,CAACE,EAAE,EAAE,EAAEF,IAAI,CAAC;QAC/D,MAAM,IAAI,CAACT,UAAU,CAAC,CAAC;MACzB,EAAE,OAAOJ,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,yBAAwB,GAAIA,KAAK,CAACS,OAAO;QACtDF,OAAO,CAACP,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED,MAAMgB,UAAUA,CAACD,EAAE,EAAE;MACnB,IAAI;QACF,MAAMpB,KAAK,CAACsB,MAAM,CAAC,+BAA+BF,EAAE,EAAE,CAAC;QACvD,MAAM,IAAI,CAACX,UAAU,CAAC,CAAC;MACzB,EAAE,OAAOJ,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,yBAAwB,GAAIA,KAAK,CAACS,OAAO;QACtDF,OAAO,CAACP,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF,CAAC;EAEDkB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACd,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}