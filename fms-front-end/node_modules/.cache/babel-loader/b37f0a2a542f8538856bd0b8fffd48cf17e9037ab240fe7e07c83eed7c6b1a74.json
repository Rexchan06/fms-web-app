{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"items-container\"\n};\nconst _hoisted_6 = [\"onUpdate:modelValue\"];\nconst _hoisted_7 = [\"onUpdate:modelValue\"];\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"My File Management System\", -1 /* HOISTED */)), _createCommentVNode(\" Input Form \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newItem.name = $event),\n    placeholder: \"name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newItem.name]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newItem.description = $event),\n    placeholder: \"description\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newItem.description]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addItem && $options.addItem(...args))\n  }, \"Create File\")]), _createCommentVNode(\" Loading State \"), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Loading...\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Error State \"), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Items List - explicitly checking if items exist \"), $data.items && $data.items.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id,\n      class: \"item\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => item.name = $event\n    }, null, 8 /* PROPS */, _hoisted_6), [[_vModelText, item.name]]), _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => item.description = $event\n    }, null, 8 /* PROPS */, _hoisted_7), [[_vModelText, item.description]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.updateItem(item)\n    }, \"Update File\", 8 /* PROPS */, _hoisted_8), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteItem(item.id)\n    }, \"Delete File\", 8 /* PROPS */, _hoisted_9)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : !$data.loading ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createCommentVNode(\" Empty State \"), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"empty-state\"\n  }, \" No files found \", -1 /* HOISTED */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","_cache","$event","$data","newItem","name","placeholder","description","onClick","args","$options","addItem","loading","_hoisted_3","error","_hoisted_4","_toDisplayString","items","length","_hoisted_5","_Fragment","_renderList","item","_hoisted_6","_hoisted_7","updateItem","_hoisted_8","deleteItem","_hoisted_9"],"sources":["D:\\Rex\\HELP University\\Y2S1\\File Management System Project\\fms-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>My File Management System</h1>\n    \n    <!-- Input Form -->\n    <div class=\"form-container\">\n      <input v-model=\"newItem.name\" placeholder=\"name\">\n      <input v-model=\"newItem.description\" placeholder=\"description\">\n      <button @click=\"addItem\">Create File</button>\n    </div>\n\n    <!-- Loading State -->\n    <div v-if=\"loading\">Loading...</div>\n\n    <!-- Error State -->\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\n\n    <!-- Items List - explicitly checking if items exist -->\n    <div v-if=\"items && items.length > 0\" class=\"items-container\">\n      <ul>\n        <li v-for=\"item in items\" :key=\"item.id\" class=\"item\">\n          <input v-model=\"item.name\">\n          <input v-model=\"item.description\">\n          <button @click=\"updateItem(item)\">Update File</button>\n          <button @click=\"deleteItem(item.id)\">Delete File</button>\n        </li>\n      </ul>\n    </div>\n    \n    <!-- Empty State -->\n    <div v-else-if=\"!loading\" class=\"empty-state\">\n      No files found\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      items: [],\n      loading: false,\n      error: null,\n      newItem: {\n        name: \"\",\n        description: \"\",\n      },\n    };\n  },\n\n  methods: {\n    async fetchItems() {\n      this.loading = true;\n      this.error = null;\n      try {\n        const response = await axios.get(\"http://localhost:3001/items\");\n        this.items = response.data;\n        console.log(\"Fetched items:\", this.items); // Debug log\n      } catch (error) {\n        this.error = \"Failed to fetch items: \" + error.message;\n        console.error(\"Error fetching items:\", error);\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async addItem() {\n      if (!this.newItem.name || !this.newItem.description) {\n        this.error = \"Please fill in both name and description\";\n        return;\n      }\n\n      try {\n        await axios.post(\"http://localhost:3001/items\", this.newItem);\n        await this.fetchItems();\n        this.newItem.name = \"\";\n        this.newItem.description = \"\";\n      } catch (error) {\n        this.error = \"Failed to add item: \" + error.message;\n        console.error(\"Error adding item:\", error);\n      }\n    },\n\n    async updateItem(item) {\n      try {\n        await axios.put(`http://localhost:3001/items/${item.id}`, item);\n        await this.fetchItems();\n      } catch (error) {\n        this.error = \"Failed to update item: \" + error.message;\n        console.error(\"Error updating item:\", error);\n      }\n    },\n\n    async deleteItem(id) {\n      try {\n        await axios.delete(`http://localhost:3001/items/${id}`);\n        await this.fetchItems();\n      } catch (error) {\n        this.error = \"Failed to delete item: \" + error.message;\n        console.error(\"Error deleting item:\", error);\n      }\n    },\n  },\n\n  created() {\n    this.fetchItems();\n  },\n};\n</script>\n\n<style scoped>\n#app {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.form-container {\n  margin: 20px 0;\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n}\n\n.items-container {\n  margin-top: 20px;\n}\n\n.item {\n  display: flex;\n  gap: 10px;\n  margin: 10px 0;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  align-items: center;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\ninput {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n.error {\n  color: red;\n  margin: 10px 0;\n}\n\n.empty-state {\n  text-align: center;\n  margin: 20px 0;\n  color: #666;\n}\n</style>"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EAINC,KAAK,EAAC;AAAgB;;EAL/BC,GAAA;AAAA;;EAAAA,GAAA;EAesBD,KAAK,EAAC;;;EAf5BC,GAAA;EAkB0CD,KAAK,EAAC;;mBAlBhD;mBAAA;mBAAA;mBAAA;;uBACEE,mBAAA,CAgCM,OAhCNC,UAgCM,G,0BA/BJC,mBAAA,CAAkC,YAA9B,2BAAyB,sBAE7BC,mBAAA,gBAAmB,EACnBD,mBAAA,CAIM,OAJNE,UAIM,G,gBAHJF,mBAAA,CAAiD;IANvD,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMsBC,KAAA,CAAAC,OAAO,CAACC,IAAI,GAAAH,MAAA;IAAEI,WAAW,EAAC;iDAA1BH,KAAA,CAAAC,OAAO,CAACC,IAAI,E,mBAC5BP,mBAAA,CAA+D;IAPrE,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOsBC,KAAA,CAAAC,OAAO,CAACG,WAAW,GAAAL,MAAA;IAAEI,WAAW,EAAC;iDAAjCH,KAAA,CAAAC,OAAO,CAACG,WAAW,E,GACnCT,mBAAA,CAA6C;IAApCU,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;KAAE,aAAW,E,GAGtCV,mBAAA,mBAAsB,EACXI,KAAA,CAAAS,OAAO,I,cAAlBhB,mBAAA,CAAoC,OAZxCiB,UAAA,EAYwB,YAAU,KAZlCd,mBAAA,gBAcIA,mBAAA,iBAAoB,EACTI,KAAA,CAAAW,KAAK,I,cAAhBlB,mBAAA,CAAiD,OAAjDmB,UAAiD,EAAAC,gBAAA,CAAdb,KAAA,CAAAW,KAAK,oBAf5Cf,mBAAA,gBAiBIA,mBAAA,qDAAwD,EAC7CI,KAAA,CAAAc,KAAK,IAAId,KAAA,CAAAc,KAAK,CAACC,MAAM,Q,cAAhCtB,mBAAA,CASM,OATNuB,UASM,GARJrB,mBAAA,CAOK,c,kBANHF,mBAAA,CAKKwB,SAAA,QAzBbC,WAAA,CAoB2BlB,KAAA,CAAAc,KAAK,EAAbK,IAAI;yBAAf1B,mBAAA,CAKK;MALsBD,GAAG,EAAE2B,IAAI,CAAC7B,EAAE;MAAEC,KAAK,EAAC;wBAC7CI,mBAAA,CAA2B;MArBrC,uBAAAI,MAAA,IAqB0BoB,IAAI,CAACjB,IAAI,GAAAH;4BArBnCqB,UAAA,I,cAqB0BD,IAAI,CAACjB,IAAI,E,mBACzBP,mBAAA,CAAkC;MAtB5C,uBAAAI,MAAA,IAsB0BoB,IAAI,CAACf,WAAW,GAAAL;4BAtB1CsB,UAAA,I,cAsB0BF,IAAI,CAACf,WAAW,E,GAChCT,mBAAA,CAAsD;MAA7CU,OAAK,EAAAN,MAAA,IAAEQ,QAAA,CAAAe,UAAU,CAACH,IAAI;OAAG,aAAW,iBAvBvDI,UAAA,GAwBU5B,mBAAA,CAAyD;MAAhDU,OAAK,EAAAN,MAAA,IAAEQ,QAAA,CAAAiB,UAAU,CAACL,IAAI,CAAC7B,EAAE;OAAG,aAAW,iBAxB1DmC,UAAA,E;yCA8BqBzB,KAAA,CAAAS,OAAO,I,cAAxBhB,mBAAA,CAEMwB,SAAA;IAhCVzB,GAAA;EAAA,IA6BII,mBAAA,iBAAoB,E,0BACpBD,mBAAA,CAEM;IAFoBJ,KAAK,EAAC;EAAa,GAAC,kBAE9C,qB,oDAhCJK,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}