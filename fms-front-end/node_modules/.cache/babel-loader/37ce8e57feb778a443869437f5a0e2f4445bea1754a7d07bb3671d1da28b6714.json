{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      items: [],\n      newItem: {\n        name: \"\",\n        description: \"\"\n      },\n      selectedFile: null,\n      errorMessage: \"\" // Added error message state\n    };\n  },\n  methods: {\n    handleFileChange(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    handleUpdateFile(event, item) {\n      item.newFile = event.target.files[0];\n    },\n    getFileDownloadUrl(item) {\n      return `http://localhost:3002/media/${item.filepath}`;\n    },\n    async fetchItems() {\n      try {\n        const response = await axios.get(\"http://localhost:3002/items\");\n        this.items = response.data;\n      } catch (error) {\n        console.error(\"Error fetching items:\", error);\n        this.errorMessage = \"Failed to fetch items.\";\n      }\n    },\n    async downloadFile(item) {\n      try {\n        const response = await axios({\n          url: this.getFileDownloadUrl(item),\n          method: \"GET\",\n          responseType: \"blob\",\n          timeout: 30000 // Add timeout of 30 seconds\n        });\n\n        // Verify we got a valid response\n        if (!response.data || response.data.size === 0) {\n          throw new Error('Invalid file data received');\n        }\n\n        // Use FileReader to verify blob content\n        const reader = new FileReader();\n        reader.onload = () => {\n          // Create download link\n          const url = window.URL.createObjectURL(new Blob([response.data]));\n          const link = document.createElement(\"a\");\n          link.href = url;\n          link.setAttribute(\"download\", item.originalName || 'download');\n\n          // Append to document, click, and cleanup\n          document.body.appendChild(link);\n          setTimeout(() => {\n            // Add small delay before clicking\n            link.click();\n            setTimeout(() => {\n              // Cleanup after small delay\n              document.body.removeChild(link);\n              window.URL.revokeObjectURL(url);\n            }, 100);\n          }, 100);\n        };\n        reader.readAsArrayBuffer(response.data);\n      } catch (error) {\n        console.error(\"Download error:\", error);\n        if (error.response?.status === 404) {\n          this.errorMessage = \"File not found. It may have been deleted or moved.\";\n        } else if (error.code === 'ECONNABORTED') {\n          this.errorMessage = \"Download timed out. Please try again.\";\n        } else {\n          this.errorMessage = \"Failed to download file. Please try again.\";\n        }\n      }\n    },\n    async addItem() {\n      try {\n        if (!this.selectedFile) {\n          this.errorMessage = \"Please select a file\";\n          return;\n        }\n\n        // Log the form data for debugging\n        const formData = new FormData();\n        formData.append(\"name\", this.newItem.name);\n        formData.append(\"description\", this.newItem.description);\n        formData.append(\"file\", this.selectedFile);\n\n        // Log what we're sending\n        console.log(\"Sending file:\", this.selectedFile);\n        console.log(\"Sending name:\", this.newItem.name);\n        console.log(\"Sending description:\", this.newItem.description);\n        const response = await axios.post(\"http://localhost:3002/items\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        console.log(\"Upload response:\", response.data);\n\n        // Reset form and fetch updated items\n        await this.fetchItems();\n        this.newItem.name = \"\";\n        this.newItem.description = \"\";\n        this.selectedFile = null;\n        this.errorMessage = \"\";\n        if (this.$refs.fileInput) {\n          this.$refs.fileInput.value = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error details:\", error.response?.data || error.message);\n        this.errorMessage = error.response?.data?.error || \"Failed to add item. Please try again.\";\n      }\n    },\n    async updateItem(item) {\n      try {\n        const formData = new FormData(); // Fixed typo here\n        formData.append(\"name\", item.name);\n        formData.append(\"description\", item.description);\n        if (item.newFile) {\n          formData.append(\"file\", item.newFile);\n        }\n        await axios.put(`http://localhost:3002/items/${item.id}`, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        await this.fetchItems();\n        item.newFile = null;\n        const fileInput = this.$refs[`updateFile_${item.id}`];\n        if (fileInput) {\n          fileInput.value = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error updating item:\", error);\n        this.errorMessage = \"Failed to update item. Please try again.\";\n      }\n    },\n    async deleteItem(id) {\n      try {\n        await axios.delete(`http://localhost:3002/items/${id}`);\n        await this.fetchItems();\n      } catch (error) {\n        console.error(\"Error deleting item:\", error);\n        this.errorMessage = \"Failed to delete item. Please try again.\";\n      }\n    }\n  },\n  created() {\n    this.fetchItems();\n  }\n};","map":{"version":3,"names":["axios","name","data","items","newItem","description","selectedFile","errorMessage","methods","handleFileChange","event","target","files","handleUpdateFile","item","newFile","getFileDownloadUrl","filepath","fetchItems","response","get","error","console","downloadFile","url","method","responseType","timeout","size","Error","reader","FileReader","onload","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","originalName","body","appendChild","setTimeout","click","removeChild","revokeObjectURL","readAsArrayBuffer","status","code","addItem","formData","FormData","append","log","post","headers","$refs","fileInput","value","message","updateItem","put","id","deleteItem","delete","created"],"sources":["D:\\Rex\\HELP University\\Y2S1\\File Management System Project\\fms-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>My File Management System</h1>\n    \n    <div class=\"form-container\">\n      <input v-model=\"newItem.name\" placeholder=\"name\">\n      <input v-model=\"newItem.description\" placeholder=\"description\">\n      <input\n        type=\"file\"\n        @change=\"handleFileChange\"\n        ref=\"fileInput\"\n        class=\"file-input\"\n      >\n      <button @click=\"addItem\">Upload File</button>\n    </div>\n\n    <div class=\"items-container\">\n      <ul>\n        <li v-for=\"item in items\" :key=\"item.id\" class=\"item\">\n          <div class=\"item-info\">\n            <input v-model=\"item.name\">\n            <input v-model=\"item.description\">\n            <a \n                :href=\"getFileDownloadUrl(item.filepath)\" \n                class=\"download-link\"\n                :download=\"item.originalName\"\n                @click.prevent=\"downloadFile(item)\"\n            >\n                Download {{ item.originalName }}\n            </a>\n        </div>\n          <div class=\"item-actions\">\n            <input\n              type=\"file\"\n              @change=\"(e) => handleUpdateFile(e, item)\"\n              ref=\"`updateFile_${item.id}`\"\n              class=\"file-input\"\n            >\n            <button @click=\"updateItem(item)\">Update</button>\n            <button @click=\"deleteItem(item.id)\" class=\"delete-btn\">Delete</button>\n          </div>\n        </li>\n      </ul>\n    </div>\n\n    <!-- Error Message -->\n    <div v-if=\"errorMessage\" class=\"error-message\">\n      {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      items: [],\n      newItem: {\n        name: \"\",\n        description: \"\",\n      },\n      selectedFile: null,\n      errorMessage: \"\", // Added error message state\n    };\n  },\n\n  methods: {\n    handleFileChange(event) {\n      this.selectedFile = event.target.files[0];\n    },\n\n    handleUpdateFile(event, item) {\n      item.newFile = event.target.files[0];\n    },\n\n    getFileDownloadUrl (item) {\n      return `http://localhost:3002/media/${item.filepath}`;\n    },\n\n    async fetchItems() {\n      try {\n        const response = await axios.get(\"http://localhost:3002/items\");\n        this.items = response.data;\n      } catch (error) {\n        console.error(\"Error fetching items:\", error);\n        this.errorMessage = \"Failed to fetch items.\";\n      }\n    },\n\n    async downloadFile(item) {\n    try {\n        const response = await axios({\n            url: this.getFileDownloadUrl(item),\n            method: \"GET\",\n            responseType: \"blob\",\n            timeout: 30000  // Add timeout of 30 seconds\n        });\n\n        // Verify we got a valid response\n        if (!response.data || response.data.size === 0) {\n            throw new Error('Invalid file data received');\n        }\n\n        // Use FileReader to verify blob content\n        const reader = new FileReader();\n        reader.onload = () => {\n            // Create download link\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.setAttribute(\"download\", item.originalName || 'download');\n            \n            // Append to document, click, and cleanup\n            document.body.appendChild(link);\n            setTimeout(() => {  // Add small delay before clicking\n                link.click();\n                setTimeout(() => {  // Cleanup after small delay\n                    document.body.removeChild(link);\n                    window.URL.revokeObjectURL(url);\n                }, 100);\n            }, 100);\n        };\n        \n        reader.readAsArrayBuffer(response.data);\n\n    } catch (error) {\n        console.error(\"Download error:\", error);\n        if (error.response?.status === 404) {\n            this.errorMessage = \"File not found. It may have been deleted or moved.\";\n        } else if (error.code === 'ECONNABORTED') {\n            this.errorMessage = \"Download timed out. Please try again.\";\n        } else {\n            this.errorMessage = \"Failed to download file. Please try again.\";\n        }\n      }\n    },\n\n    async addItem() {\n    try {\n        if (!this.selectedFile) {\n            this.errorMessage = \"Please select a file\";\n            return;\n        }\n\n        // Log the form data for debugging\n        const formData = new FormData();\n        formData.append(\"name\", this.newItem.name);\n        formData.append(\"description\", this.newItem.description);\n        formData.append(\"file\", this.selectedFile);\n\n        // Log what we're sending\n        console.log(\"Sending file:\", this.selectedFile);\n        console.log(\"Sending name:\", this.newItem.name);\n        console.log(\"Sending description:\", this.newItem.description);\n\n        const response = await axios.post(\"http://localhost:3002/items\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n        });\n\n        console.log(\"Upload response:\", response.data);\n\n        // Reset form and fetch updated items\n        await this.fetchItems();\n        this.newItem.name = \"\";\n        this.newItem.description = \"\";\n        this.selectedFile = null;\n        this.errorMessage = \"\";\n\n        if (this.$refs.fileInput) {\n            this.$refs.fileInput.value = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error details:\", error.response?.data || error.message);\n        this.errorMessage = error.response?.data?.error || \"Failed to add item. Please try again.\";\n      }\n    },\n\n    async updateItem(item) {\n      try {\n        const formData = new FormData(); // Fixed typo here\n        formData.append(\"name\", item.name);\n        formData.append(\"description\", item.description);\n        if (item.newFile) {\n          formData.append(\"file\", item.newFile);\n        }\n\n        await axios.put(`http://localhost:3002/items/${item.id}`, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        \n        await this.fetchItems();\n        item.newFile = null;\n        const fileInput = this.$refs[`updateFile_${item.id}`];\n        if (fileInput) {\n          fileInput.value = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error updating item:\", error);\n        this.errorMessage = \"Failed to update item. Please try again.\";\n      }\n    },\n\n    async deleteItem(id) {\n      try {\n        await axios.delete(`http://localhost:3002/items/${id}`)\n        await this.fetchItems();\n      } catch (error) {\n        console.error(\"Error deleting item:\", error);\n        this.errorMessage = \"Failed to delete item. Please try again.\";\n      }\n    }\n  },\n\n  created() {\n    this.fetchItems();\n  },\n};\n</script>\n\n<style scoped>\n#app {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\nh1 {\n  text-align: center;\n  color: #2c3e50;\n  margin-bottom: 30px;\n  font-size: 2.2em;\n}\n\n.form-container {\n  margin: 30px 0;\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  flex-wrap: wrap;\n  background: #f8f9fa;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.items-container {\n  margin-top: 30px;\n}\n\n.item {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  margin: 15px 0;\n  padding: 20px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  align-items: center;\n  background: white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n  transition: transform 0.2s ease;\n}\n\n.item:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n}\n\n.item-info {\n  flex: 1;\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.item-actions {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\ninput {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  font-size: 14px;\n  transition: border-color 0.3s ease;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #4CAF50;\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.1);\n}\n\n.file-input {\n  padding: 8px;\n  border: 1px dashed #ddd;\n  border-radius: 6px;\n  background: #f8f9fa;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: background-color 0.3s ease;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n.delete-btn {\n  background-color: #dc3545;\n}\n\n.delete-btn:hover {\n  background-color: #c82333;\n}\n\n.download-link {\n  color: #2196F3;\n  text-decoration: none;\n  padding: 8px 16px;\n  border: 1px solid #2196F3;\n  border-radius: 6px;\n  transition: all 0.3s ease;\n}\n\n.download-link:hover {\n  background-color: #2196F3;\n  color: white;\n}\n\n.error-message {\n  color: #dc3545;\n  margin-top: 20px;\n  text-align: center;\n  padding: 10px;\n  background-color: #ffe6e6;\n  border-radius: 6px;\n  border: 1px solid #ffcccc;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}